# Script to illustrate polynomial interpolation on data generated by the function arctan(x).
# If you make the domain of interpolation large enough, you will see the "Runge phenomonon": large oscillations of the interpolant near the edges of the domain.
import numpy as np
import matplotlib.pyplot as plt
from poly_intpol import *

# Example computation. Polynomial interpolation for the arctan function.
def F(x):
    return np.arctan(x)
# Set the domain of interpolation.
L = -2.0
R = 2.0
# Fix the number of nodes and node locations:
nNodes = 32
xNodes = np.linspace(L,R,nNodes)
# Generate the inteprolation data with F:
yNodes = F(xNodes)
# Fine grid for plotting F and its interpolant:
nOut = 1000
xOut = np.linspace(L,R,nOut)
# Compute the interpolant and its values on the fine grid:
b, yOut = poly_int(xNodes,yNodes,xOut)
# Show the list of coefficients:
print(b)
fOut = F(xOut)
# Plot the function, the interplant and the interpolation data:
plt.plot(xNodes,yNodes,'*r',markersize=20,label='data set')
plt.plot(xOut,yOut,'-k',label='interpolant')
plt.plot(xOut,fOut,'-y',label='function')
plt.xlabel('x')
plt.ylabel('y')
plt.legend()
plt.show()
